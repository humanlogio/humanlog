name: Create a main release

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'Release channel, defaults to `weekly` for safety. Prefer tags to trigger a `main` release.'
        required: true
        default: 'weekly'
        type: choice
        options:
        - main
        - weekly
      api_url:
        description: 'API url to use'
        required: true
        default: 'https://api.humanlog.io'
        type: choice
        options:
        - https://api.humanlog.io
        - https://api.humanlog.dev
  schedule:
    - cron: "15 2 * * tue"
  push:
    tags:
      - "*"

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        targets:
        - name: linux-amd64
          runner: ubuntu-latest
          tags: pro
          goos: linux
          goarch: amd64
          # preinstall: sudo apt install -y gcc libgtk-3-dev libayatana-appindicator3-dev
        - name: linux-arm64
          runner: ubuntu-latest
          goos: linux
          goarch: arm64
          goenvs: CC=aarch64-linux-gnu-gcc CXX=x86_64-linux-gnu-g++
          preinstall: sudo apt-get update && sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu # gcc libgtk-3-dev libayatana-appindicator3-dev libc6-dev-i386
        - name: darwin-amd64
          runner: macos-latest
          tags: pro
          goos: darwin
          goarch: amd64
        - name: darwin-arm64
          runner: macos-latest
          tags: pro
          goos: darwin
          goarch: arm64
    name: ${{ matrix.targets.name }}
    runs-on: ${{ matrix.targets.runner }}
    env:
      GOPRIVATE: "github.com/humanlogio/humanlog-pro"
      GH_ACCESS_TOKEN_FOR_HUMANLOGPRO: ${{ secrets.GH_ACCESS_TOKEN_FOR_HUMANLOGPRO }}
      CGO_ENABLED: 1
      GOBIN: /usr/local/bin/
    steps:
      - name: Set up Go 1
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache: true
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - if: ${{ matrix.targets.preinstall != '' }}
        run: ${{ matrix.targets.preinstall }}
      - run: echo "${HOME}/.humanlog/bin" >> $GITHUB_PATH
      - run: curl https://humanlog.io/install_apictl.sh | bash
      - run: git config --global --add safe.directory '*'
      - run: git config --global url.https://$GH_ACCESS_TOKEN_FOR_HUMANLOGPRO@github.com/.insteadOf https://github.com/
      - run: go install github.com/goware/modvendor@latest
      - run: go mod tidy
      - run: go mod vendor
      - run: modvendor -copy="**/*.a **/*.h" -v
      - run: mkdir -p dist/${{ matrix.targets.goos }}-${{ matrix.targets.goarch }}
      - run: ${{ matrix.targets.goenvs }} ./script/build.sh
        env:
          HUMANLOG_GOTAGS: ${{ matrix.targets.tags }}
          GOOS: ${{ matrix.targets.goos }}
          GOARCH: ${{ matrix.targets.goarch }}
          HUMANLOG_IS_PROD_BUILD: 'true'
      - uses: actions/upload-artifact@v4
        with:
          name: humanlog-bins-${{ matrix.targets.goos }}-${{ matrix.targets.goarch }}
          path: dist/*

  publish:
    name: "publish"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: echo "${HOME}/.humanlog/bin" >> $GITHUB_PATH
      - run: curl https://humanlog.io/install_apictl.sh | bash
      - uses: actions/upload-artifact/merge@v4
        with:
          name: humanlog-bins
          pattern: humanlog-bins-*
          separate-directories: true
          delete-merged: true
      - uses: actions/download-artifact@v4
        with:
          name: humanlog-bins
      - run: ./script/publish.sh
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          CHANNEL: ${{ inputs.channel }}
          API_URL: ${{ inputs.api_url }}
          HUMANLOG_IS_PROD_BUILD: 'true'
          HMAC_KEY_ID: ${{ inputs.api_url == 'https://api.humanlog.io' && secrets.PROD_HMAC_KEY_ID || secrets.DEV_HMAC_KEY_ID }}
          HMAC_PRIVATE_KEY: ${{ inputs.api_url == 'https://api.humanlog.io' && secrets.PROD_HMAC_PRIVATE_KEY || secrets.DEV_HMAC_PRIVATE_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_BINARIES_BUCKET_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_BINARIES_BUCKET_ACCESS_KEY }}
      - run: ./script/publish.sh
        if: ${{ github.event_name == 'schedule' }}
        env:
          CHANNEL: 'weekly'
          API_URL: 'https://api.humanlog.io'
          HUMANLOG_IS_PROD_BUILD: 'true'
          HMAC_KEY_ID: ${{ secrets.PROD_HMAC_KEY_ID }}
          HMAC_PRIVATE_KEY: ${{ secrets.PROD_HMAC_PRIVATE_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_BINARIES_BUCKET_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_BINARIES_BUCKET_ACCESS_KEY }}
      - run: ./script/publish.sh
        if: ${{ github.event_name == 'push' }}
        env:
          CHANNEL: 'main'
          API_URL: 'https://api.humanlog.io'
          HUMANLOG_IS_PROD_BUILD: 'true'
          HMAC_KEY_ID: ${{ secrets.PROD_HMAC_KEY_ID }}
          HMAC_PRIVATE_KEY: ${{ secrets.PROD_HMAC_PRIVATE_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_BINARIES_BUCKET_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_BINARIES_BUCKET_ACCESS_KEY }}
